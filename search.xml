<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python时间操作</title>
      <link href="/2025/03/13/Pandas%E6%97%B6%E9%97%B4%E6%93%8D%E4%BD%9C/"/>
      <url>/2025/03/13/Pandas%E6%97%B6%E9%97%B4%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="pd-date-range-生成时间序列"><a href="#pd-date-range-生成时间序列" class="headerlink" title="pd.date_range:生成时间序列"></a>pd.date_range:生成时间序列</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#指定起始时间</span></span><br><span class="line">pd.date_range(start=<span class="string">&quot;20220601 00:00:00&quot;</span>, end=<span class="string">&quot;20220901 00:00:00&quot;</span>, freq=<span class="string">&quot;2s&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#指定开始时间、时间序列数量和频率,freq:H:hour,D:day,Y:year,M:month,s:秒</span></span><br><span class="line">pd.date_range(start=<span class="string">&#x27;20200101&#x27;</span>,periods=<span class="number">5</span>,freq=<span class="string">&#x27;2h&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="pd-to-datetime-将数据格式转为datetime格式"><a href="#pd-to-datetime-将数据格式转为datetime格式" class="headerlink" title="pd.to_datetime:将数据格式转为datetime格式"></a>pd.to_datetime:将数据格式转为datetime格式</h2><p><code>pandas.to_datetime</code>(<em>arg</em>, <em>errors&#x3D;’raise’</em>, <em>dayfirst&#x3D;False</em>, <em>yearfirst&#x3D;False</em>, <em>utc&#x3D;None</em>, <em>format&#x3D;None</em>, <em>exact&#x3D;True</em>, <em>unit&#x3D;None</em>, <em>infer_datetime_format&#x3D;False</em>, <em>origin&#x3D;’unix’</em>, <em>cache&#x3D;True</em></p><ul><li>errors：参数raise时，表示传入数据格式不符合是会报错；ignore时，表示忽略报错返回原数据；coerce用NaT时间空值代替。</li><li><code>dayfirst</code>:表示传入数据的前两位数为天。如‘030820’——》2020-03-08.</li><li>yearfirst:表示传入数据的前两位数为年份。如‘030820’——》2003-08-20.</li><li>format：自定义输出格式，如“%Y-%m-%d”.</li><li>unit：可以为[‘D’, ‘h’ ,’m’, ‘ms’ ,’s’, ‘ns’]</li><li>infer_datetime_format:加速计算</li><li>origin：自定义开始时间，默认为1990-01-01</li></ul><p><strong>解析日&#x2F;月&#x2F;年格式</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">european_dates = pd.Series([<span class="string">&#x27;03/08/2020&#x27;</span>, <span class="string">&#x27;04/09/2020&#x27;</span>])</span><br><span class="line"><span class="comment"># 使用dayfirst=True正确解析</span></span><br><span class="line"><span class="built_in">print</span>(pd.to_datetime(european_dates, dayfirst=<span class="literal">True</span>))</span><br><span class="line"><span class="comment"># 不使用dayfirst (默认美国格式，月/日/年)</span></span><br><span class="line"><span class="built_in">print</span>(pd.to_datetime(european_dates, dayfirst=<span class="literal">False</span>))</span><br></pre></td></tr></table></figure><p><strong>自定义输出格式</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">time = pd.Series([<span class="string">&#x27;202001&#x27;</span>,<span class="string">&#x27;202002&#x27;</span>])</span><br><span class="line">pd.to_datetime(time, <span class="built_in">format</span>=<span class="string">&quot;%Y%m&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="只想要得到日期中的某些信息"><a href="#只想要得到日期中的某些信息" class="headerlink" title="只想要得到日期中的某些信息"></a>只想要得到日期中的某些信息</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;只要日期:\n&quot;</span>, arr[<span class="string">&#x27;date&#x27;</span>].dt.date) <span class="comment">#年月日</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;只要时分秒:\n&quot;</span>, arr[<span class="string">&#x27;date&#x27;</span>].dt.time)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;只要小时:\n&quot;</span>, arr[<span class="string">&#x27;date&#x27;</span>].dt.hour)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;只要分钟:\n&quot;</span>, arr[<span class="string">&#x27;date&#x27;</span>].dt.minute)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;只要秒:\n&quot;</span>, arr[<span class="string">&#x27;date&#x27;</span>].dt.second)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;只要年:\n&quot;</span>, arr[<span class="string">&#x27;date&#x27;</span>].dt.year)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;只要月:\n&quot;</span>, arr[<span class="string">&#x27;date&#x27;</span>].dt.month)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;只要日: \n&quot;</span>, arr[<span class="string">&#x27;date&#x27;</span>].dt.day)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;一年中的第几天: \n&quot;</span>, arr[<span class="string">&#x27;date&#x27;</span>].dt..dayofyear)</span><br></pre></td></tr></table></figure><h2 id="Timedelta类型："><a href="#Timedelta类型：" class="headerlink" title="Timedelta类型："></a>Timedelta类型：</h2><p>在pandas中是一个表示两个datetime值之间的差(如日,秒和微妙)的类型,2个Datetime数据运算相减得出的结果就是一个Timedelta数据类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pd.Timedelta(days=<span class="number">2</span>)</span><br><span class="line">&gt;&gt;Timedelta(<span class="string">&#x27;2 days 00:00:00&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pd.Timedelta(value=<span class="number">2</span>,unit=<span class="string">&#x27;h&#x27;</span>)</span><br><span class="line">&gt;&gt;Timedelta(<span class="string">&#x27;0 days 02:00:00&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(pd.to_datetime(<span class="string">&#x27;2019-9-4&#x27;</span>) - pd.to_datetime(<span class="string">&#x27;1993-5-27&#x27;</span>)) / pd.Timedelta(days=<span class="number">365</span>)</span><br><span class="line">&gt;&gt;<span class="number">26.29041095890411</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pd.to_datetime(<span class="string">&#x27;2019-9-4&#x27;</span>) - pd.Timedelta(days=<span class="number">365</span>)</span><br><span class="line">Timestamp(<span class="string">&#x27;2018-09-04 00:00:00&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="将年-月-日-时数据按年月分组"><a href="#将年-月-日-时数据按年月分组" class="headerlink" title="将年-月-日-时数据按年月分组"></a>将年-月-日-时数据按年月分组</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按年月分组并计算平均值</span></span><br><span class="line">result = df.groupby(df.time.dt.year * <span class="number">100</span> + df.dt.month).mean()</span><br><span class="line">result[<span class="string">&#x27;group&#x27;</span>] = pd.to_datetime(result[<span class="string">&quot;group&quot;</span>], <span class="built_in">format</span>=<span class="string">&quot;%Y%m&quot;</span>)</span><br><span class="line">result = result.rename(&#123;<span class="string">&#x27;group&#x27;</span>: <span class="string">&#x27;month&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="strftime-函数"><a href="#strftime-函数" class="headerlink" title="strftime()函数"></a>strftime()函数</h2><p>采用DatetimeIndex.strftime()函数将给定的DatetimeIndex对象转换为指定的格式。</p><ol><li><strong>tz&#x3D;’Asia&#x2F;Calcutta’ 的含义</strong></li></ol><p>tz&#x3D;’Asia&#x2F;Calcutta’ 表示时区设置，将 DatetimeIndex 生成的时间转换到 印度标准时间（IST, UTC+5:30）。<br>Asia&#x2F;Calcutta 是 pytz 或 zoneinfo 识别的时区名称之一，尽管它已经被 Asia&#x2F;Kolkata 取代，但仍然可以使用。</p><ol start="2"><li><strong>‘% B % d, % Y, % r’ 的格式化含义</strong></li></ol><p>这些格式代码用于 strftime() 方法，将时间格式化为字符串：</p><ul><li>%B - 完整的月份名称（如 January, February）</li><li>%d - 日期（01, 02, …, 31）</li><li>%Y - 四位数的年份（如 2024）</li><li>%r - 12 小时制时间（hh:mm:ss AM&#x2F;PM）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">didx = pd.date_range(start=<span class="string">&#x27;2000-01-15 08:00&#x27;</span>, freq=<span class="string">&#x27;Q&#x27;</span>, periods=<span class="number">4</span>, tz=<span class="string">&#x27;Asia/Calcutta&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(didx.strftime(<span class="string">&#x27;%B %d, %Y, %r&#x27;</span>))</span><br><span class="line">&gt;&gt;Index([<span class="string">&#x27;March 31, 2000, 08:00:00 AM&#x27;</span>, <span class="string">&#x27;June 30, 2000, 08:00:00 AM&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;September 30, 2000, 08:00:00 AM&#x27;</span>, <span class="string">&#x27;December 31, 2000, 08:00:00 AM&#x27;</span>],</span><br><span class="line">      dtype=<span class="string">&#x27;object&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="常见的时间格式代码"><a href="#常见的时间格式代码" class="headerlink" title="常见的时间格式代码"></a>常见的时间格式代码</h2><table><thead><tr><th>符号</th><th>含义</th><th>示例</th></tr></thead><tbody><tr><td><code>%Y</code></td><td>四位数的年份</td><td>2025</td></tr><tr><td><code>%y</code></td><td>两位数的年份</td><td>25</td></tr><tr><td><code>%m</code></td><td>月（01-12）</td><td>03</td></tr><tr><td><code>%B</code></td><td>完整月份名</td><td>March</td></tr><tr><td><code>%b</code></td><td>缩写月份名</td><td>Mar</td></tr><tr><td><code>%d</code></td><td>日期（01-31）</td><td>13</td></tr><tr><td><code>%A</code></td><td>完整星期名</td><td>Wednesday</td></tr><tr><td><code>%a</code></td><td>缩写星期名</td><td>Wed</td></tr><tr><td><code>%H</code></td><td>24 小时制的小时（00-23）</td><td>15</td></tr><tr><td><code>%I</code></td><td>12 小时制的小时（01-12）</td><td>03</td></tr><tr><td><code>%M</code></td><td>分钟（00-59）</td><td>45</td></tr><tr><td><code>%S</code></td><td>秒（00-59）</td><td>30</td></tr><tr><td><code>%p</code></td><td>AM&#x2F;PM 标识</td><td>AM</td></tr><tr><td><code>%r</code></td><td>12 小时制时间（hh:mm:ss AM&#x2F;PM）</td><td>03:45:30 PM</td></tr><tr><td><code>%f</code></td><td>微秒（000000-999999）</td><td>123456</td></tr><tr><td><code>%z</code></td><td>时区偏移</td><td>+0530</td></tr><tr><td><code>%Z</code></td><td>时区名称</td><td>IST</td></tr><tr><td><code>%j</code></td><td>一年中的第几天（001-366）</td><td>072</td></tr><tr><td><code>%U</code></td><td>一年中的第几周（00-53，周日为一周的开始）</td><td>10</td></tr><tr><td><code>%W</code></td><td>一年中的第几周（00-53，周一为一周的开始）</td><td>10</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/01/08/hello-world/"/>
      <url>/2025/01/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
